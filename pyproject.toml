[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pyopp"
dynamic = ["version"]
description = "Example package for the PYOPP workshop"
readme = "README.md"
authors = [
  { name = "Anno Knierim", email = "anno.knierim@tu-dortmund.de" },
]
maintainers = [
  { name = "Anno Knierim", email = "anno.knierim@tu-dortmund.de" },
]
license = { text = "MIT" }
classifiers = [
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Development Status :: 4 - Beta",
]

requires-python = ">=3.12"

dependencies = [
  "ipython",
  "matplotlib",
  "numpy",
  "rich",
  "toml",
  "tqdm",
  "colour",
]

[dependency-groups]

dev = [
  "pre-commit",
  {include-group = "tests"},
  {include-group = "docs"},
]

tests = [
  "coverage!=6.3.0",
  "h5py",
  "pytest >= 7.0",
  "pytest-cov",
  "pytest-xdist",
  "restructuredtext-lint",
]

docs = [
  "graphviz",
  "ipython",
  "jupyter",
  "notebook",
  "numpydoc",
  "pydata_sphinx_theme",
  "sphinx",
  "sphinx-changelog",
  "sphinx-copybutton",
  "sphinx_automodapi",
]

[tool.hatch.build.targets.wheel]
include = ["src/pyopp"]

[tool.hatch.build.targets.wheel.sources]
"src/pyopp" = "pyopp"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/pyopp/_version.py"

[tool.coverage.run]
omit = [
  "src/pyopp/version.py",
  "src/pryopp/_version.py",
  "docs/*",
]

[tool.coverage.xml]
output = "coverage.xml"

[tool.towncrier]
    package = "pyopp"
    directory = "docs/changes"
    filename = "CHANGES.rst"
    template = "docs/changes/template.rst"
    # let towncrier create proper links to the merged PR
    issue_format = "`#{issue} <https://github.com/aknierim/pyopp_example/pull/{issue}>`__"

    [tool.towncrier.fragment.feature]
        name = "New Features"
        showcontent = true

    [tool.towncrier.fragment.bugfix]
        name = "Bug Fixes"
        showcontent = true

    [tool.towncrier.fragment.api]
        name = "API Changes"
        showcontent = true

    [tool.towncrier.fragment.optimization]
        name = "Refactoring and Optimization"
        showcontent = true

    [tool.towncrier.fragment.maintenance]
        name = "Maintenance"
        showcontent = true

    [[tool.towncrier.section]]
        name = ""
        path = ""
